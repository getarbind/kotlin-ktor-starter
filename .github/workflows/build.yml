name: gradle-build
on:
  push:
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 16
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 16
      - name: Setup database
        run: |
          psql postgresql://postgres:postgres@localhost:5432/postgres -c "create database airquality_test;"
          psql postgresql://postgres:postgres@localhost:5432/postgres -c "create user airquality with password 'airquality';"
      - name: Migrate database
        run: |
          wget -qO- https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/7.5.4/flyway-commandline-7.5.4-linux-x64.tar.gz | tar xvz && sudo ln -s `pwd`/flyway-7.5.4/flyway /usr/local/bin
          /usr/local/bin/flyway -user=airquality -password=airquality -url="jdbc:postgresql://localhost:5432/airquality_test" -locations=filesystem:databases/airquality clean migrate
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build
        env:
          JDBC_DATABASE_URL: jdbc:postgresql://localhost:5432/airquality_test
          JDBC_DATABASE_USERNAME: airquality
          JDBC_DATABASE_PASSWORD: airquality
  google-container:
    runs-on: ubuntu-latest
    needs: [test]
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - uses: actions/checkout@v3
#      - name: 'authenticate to google cloud'
#        uses: 'google-github-actions/auth@v0'
#        with:
#          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'
      - name: 'set up cloud sdk'
        uses: 'google-github-actions/setup-gcloud@v0'
      - id: 'gcloud'
        name: 'gcloud'
        run: |-
          echo "gcloud"
  google-deploy-basic-server:
    runs-on: ubuntu-latest
    needs: [google-container]
    steps:
      - uses: actions/checkout@v3
#      - name: 'authenticate to google cloud'
#        uses: 'google-github-actions/auth@v0'
#        with:
#          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'
      - name: 'set up cloud sdk'
        uses: 'google-github-actions/setup-gcloud@v0'
      - id: 'gcloud'
        name: 'gcloud'
        run: |-
          echo "gcloud"
  google-deploy-data-analyzer:
    runs-on: ubuntu-latest
    needs: [google-container]
    steps:
      - uses: actions/checkout@v3
#      - name: 'authenticate to google cloud'
#        uses: 'google-github-actions/auth@v0'
#        with:
#          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'
      - name: 'set up cloud sdk'
        uses: 'google-github-actions/setup-gcloud@v0'
      - id: 'gcloud'
        name: 'gcloud'
        run: |-
          echo "gcloud"
  google-deploy-data-collector:
    runs-on: ubuntu-latest
    needs: [google-container]
    steps:
      - uses: actions/checkout@v3
#      - name: 'authenticate to google cloud'
#        uses: 'google-github-actions/auth@v0'
#        with:
#          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'
      - name: 'set up cloud sdk'
        uses: 'google-github-actions/setup-gcloud@v0'
      - id: 'gcloud'
        name: 'gcloud'
        run: |-
          echo "gcloud"
